
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5436:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - API_KEY=${API_KEY}
      - RESEND_KEY=${RESEND_KEY}
      - DEBUG=True
    ports:
      - "8039:8000"
    volumes:
      - ./backend:/app
    networks:
      - app-network

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3039:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8039
    command: npm run dev
networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: